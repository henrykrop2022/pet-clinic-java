pipeline {
    agent any
    //    {label 'ubuntu'}
    tools {
        maven 'M2_HOME' //opt/maven
        jdk 'JAVA_HOME'      
    }

    environment {

        AWS_REGION = 'us-east-1'
        AWS_REPO = '180294207776.dkr.ecr.us-east-1.amazonaws.com/jenkins-ci'
        AWS_URL = '180294207776.dkr.ecr.us-east-1.amazonaws.com'
        BRANCH_NAME= 'main'
        GIT_PROJECT_URL = 'https://github.com/henrykrop2022/pet-clinic-java.git'
        GIT_CRED = 'github-accessID'
        SONAQUBE_CRED = 'sonar-scannerID'
        SCANNER_HOME= tool 'sonar'
        SONAR_URL = 'http://54.160.67.214:9000'
        SONAQUBE_INSTALLATION = 'sonar'
        APP_NAME = 'pet-clinic-java'
        JFROG_CRED = 'jfrog-cred'
        ARTIFACTPATH = 'target/*.jar'
        ARTIFACTORY_URL = 'http://54.160.67.214:8082/artifactory'
        REPO = 'devops'
        ARTIFACTTARGETPATH = "release_${BUILD_ID}.jar"
        DOCKER_REPO = "${REPO_URL}/${DOCKER_REPO_NAME}"
        DOCKER_REPO_NAME = "${APP_NAME}"
        HELMARTIFACTPATH = "petclinic-${BUILD_ID}.tgz"
        HELMARTIFACTTARGET = "heml/petclinic-${BUILD_ID}.tgz"
        KUBERNETES_CRED = 'KUBERNETES_CRED'
        KUBERNETES_URL = ' https://6AC36BF08904889F41376896D2BC8C4C.gr7.us-east-1.eks.amazonaws.com'
    }
    stages {
        stage('Git Checkout'){ // Cloning the code from the repository
            steps{
                git branch: "${BRANCH_NAME}", url: "${GIT_PROJECT_URL}"
           }
        } 
         stage('CodeScan') {
            steps {
                sh "trivy fs --format table -o maven_dependency.html ."       
            }
        }
        stage('Unit Test'){
            steps{
                sh 'mvn clean package -DskipTests=true'
                sh 'mvn compile -DskipTests=true'
            }
        }
        stage('SonarQube Scan') {    
                steps {
                  withSonarQubeEnv(credentialsId: "${SONAQUBE_CRED}", \
                installationName: "${SONAQUBE_INSTALLATION}" ) {
              sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=${APP_NAME} -Dsonar.projectKey=${APP_NAME} \
                   -Dsonar.java.binaries=. '''
                }
            }
        }
         stage('Quality Gate Check'){
            steps{
              script{
                 waitForQualityGate abortPipeline: false, credentialsId: "${SONAQUBE_CRED}" 
              }
            }
        }
         stage('Code Package'){
            steps{
                sh 'mvn package -Dcheckstyle.skip=true'
            }
        }
    }
 } 